version: '3'

services:
  web:
    image: sugarpowder/asts:latest
    command: >
        sh -c
        "
        mkdir -p project-static &&
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn ASTS.wsgi:application --bind 0.0.0.0:8000"
    expose:
      - "8000"
    restart: always
    environment:
      - TZ=Asia/Seoul
      - DB_HOST=db
      - ELK_ADDR=http://elasticsearch:9200
    volumes:
    - .:/usr/src/app
    - ./static/rest_framework:/usr/src/app/static
    ports:
      - "8000:8000"
    depends_on:
      - db
    links:
      - db
  db:
    image: postgres:10.2
    volumes:          #볼륨에 저장
      - postgres_data:/var/lib/postgres/data
    ports:
    - "5432:5432"
    healthcheck:                #상태 체크
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      - POSTGRES_DB=asts
      - POSTGRES_PASSWORD=root
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
      - TZ=Asia/Seoul
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=astselastic
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - discovery.type=single-node
    command: >
      /bin/sh -c "./bin/elasticsearch-plugin list | grep -q analysis-nori
      || ./bin/elasticsearch-plugin install analysis-nori;
      /usr/local/bin/docker-entrypoint.sh"
  logstash:
    image: docker.elastic.co/logstash/logstash:7.1.0
    volumes:
      - ./logstash/config-dir:/usr/share/logstash/config-dir
      - ./logstash/drivers/:/usr/share/logstash/drivers
    command: logstash -f /usr/share/logstash/config-dir/logstash.conf
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEACH_URL=http://elasticsearch:9200
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
  nginx:
    image: nginx:1.19.6
    ports:
      - "80:80"
    volumes_from:
      - web
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
    depends_on:
      - web
  redis:
    image: redis
    ports:
      - "6379:6379"
volumes:
  postgres_data:
  es_data:
